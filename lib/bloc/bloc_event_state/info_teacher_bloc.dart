import 'package:flutter_bloc/flutter_bloc.dart';
import 'package:portal_ckc/api/controller/call_api_student.dart';
import 'package:portal_ckc/api/model/info_teacher_model.dart';
import 'package:portal_ckc/bloc/event/info_teacher_event.dart';
import 'package:portal_ckc/bloc/state/info_teacher_state.dart';

class InfoTeacherBloc extends Bloc<InfoTeacherEvent, InfoTeacherState> {
  final _service = CallApiStudent.adminService;

  InfoTeacherBloc() : super(InfoTeacherStateInitial()) {
    on<FetchInfoTeacher>(_onFetchInfoTeacher);
  }

  Future<void> _onFetchInfoTeacher(InfoTeacherEvent event, Emitter emit) async {
    print('‚û°Ô∏è ƒêang x·ª≠ l√Ω l·∫•y th√¥ng tin gi·∫£ng vi√™n');
    emit(InfoTeacherStateLoading());

    try {
      final response = await _service.getInfoTeacher();

      if (response.isSuccessful && response.body != null) {
        final body = response.body;
        print('üì¶ Status: ${response.statusCode}');
        print('üì¶ Body: ${response.body}');
        print('üì¶ Error: ${response.error}');

        if (body is Map<String, dynamic>) {
          if (body.containsKey('data')) {
            final listJson = body['data'] as List<dynamic>;
            final teachers = listJson
                .map((item) => Teacher.fromJson(item as Map<String, dynamic>))
                .toList();

            emit(InfoTeacherStateLoaded(teachers));
          } else {
            emit(
              InfoTeacherStateError(
                'D·ªØ li·ªáu kh√¥ng h·ª£p l·ªá: data kh√¥ng ph·∫£i danh s√°ch',
              ),
            );
          }
        } else {
          emit(
            InfoTeacherStateError(
              'Ph·∫£n h·ªìi kh√¥ng h·ª£p l·ªá t·ª´ server (body kh√¥ng ph·∫£i Map)',
            ),
          );
        }
      } else {
        final error = response.error;
        if (error is Map<String, dynamic> && error.containsKey('message')) {
          emit(InfoTeacherStateError(error['message']));
        } else {
          emit(InfoTeacherStateError('L·ªói kh√¥ng x√°c ƒë·ªãnh khi l·∫•y d·ªØ li·ªáu'));
        }
      }
    } catch (e) {
      emit(InfoTeacherStateError('L·ªói k·∫øt n·ªëi: $e'));
    }
  }
}
